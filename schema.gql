### Type definitions saved at 2021-09-28T10:17:05.112Z ###

type File implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  url: String
}

type Directory implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
}

type Site implements Node @dontInfer {
  buildTime: Date @dateformat
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  flags: SiteFlags
  polyfill: Boolean
  pathPrefix: String
}

type SiteSiteMetadata {
  title: String
  description: String
  siteUrl: String
}

type SiteFlags {
  PRESERVE_WEBPACK_CACHE: Boolean
}

type SiteFunction implements Node @dontInfer {
  functionRoute: String!
  pluginName: String!
  originalAbsoluteFilePath: String!
  originalRelativeFilePath: String!
  relativeCompiledFilePath: String!
  absoluteCompiledFilePath: String!
  matchPath: String
}

type SitePlugin implements Node @dontInfer {
  resolve: String
  name: String
  version: String
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  pluginOptions: SitePluginPluginOptions
  packageJson: SitePluginPackageJson
}

type SitePluginPluginOptions {
  base64Width: Int
  stripMetadata: Boolean
  defaultQuality: Int
  failOnError: Boolean
  name: String
  path: String
  apiURL: String
  queryLimit: Int
  collectionTypes: [SitePluginPluginOptionsCollectionTypes]
  singleTypes: [SitePluginPluginOptionsSingleTypes]
  output: String
  createLinkInHead: Boolean
  entryLimit: Int
  query: String
  exclude: SitePluginPluginOptionsExclude
  update: String
  trackingIds: [String]
  pluginConfig: SitePluginPluginOptionsPluginConfig
  pathCheck: Boolean
  allExtensions: Boolean
  isTSX: Boolean
  jsxPragma: String
}

type SitePluginPluginOptionsCollectionTypes {
  name: String
  api: SitePluginPluginOptionsCollectionTypesApi
}

type SitePluginPluginOptionsCollectionTypesApi {
  qs: SitePluginPluginOptionsCollectionTypesApiQs
}

type SitePluginPluginOptionsCollectionTypesApiQs {
  _locale: String
}

type SitePluginPluginOptionsSingleTypes {
  name: String
  api: SitePluginPluginOptionsSingleTypesApi
}

type SitePluginPluginOptionsSingleTypesApi {
  qs: SitePluginPluginOptionsSingleTypesApiQs
}

type SitePluginPluginOptionsSingleTypesApiQs {
  _locale: String
}

type SitePluginPluginOptionsExclude {
  types: [String]
}

type SitePluginPluginOptionsPluginConfig {
  head: Boolean
  respectDNT: Boolean
}

type SitePluginPackageJson {
  name: String
  description: String
  version: String
  main: String
  license: String
  dependencies: [SitePluginPackageJsonDependencies]
  devDependencies: [SitePluginPackageJsonDevDependencies]
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  keywords: [String]
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type SiteBuildMetadata implements Node @dontInfer {
  buildTime: Date @dateformat
}

type StrapiAgeGroup implements Node @dontInfer {
  upper_content_area: JSON
  lower_content_area: JSON
  title: String
  ingress: String
  content: String
  minimum_age: Int
  maximum_age: Int
  wp_guid: String
  subactivitygroup_term: StrapiAgeGroupSubactivitygroup_term
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  color: String
  links: [StrapiAgeGroupLinks]
  main_image: StrapiAgeGroupMain_image
  logo: StrapiAgeGroupLogo
  activity_groups: [StrapiAgeGroupActivity_groups]
  localizations: [StrapiAgeGroupLocalizations]
  strapiId: Int
  fields: StrapiAgeGroupFields
}

type StrapiAgeGroupSubactivitygroup_term {
  id: Int
  name: String
  singular: String
  plural: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiAgeGroupLinks {
  id: Int
  description: String
  url: String
}

type StrapiAgeGroupMain_image {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: StrapiAgeGroupMain_imageFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiAgeGroupMain_imageFormats {
  large: StrapiAgeGroupMain_imageFormatsLarge
  small: StrapiAgeGroupMain_imageFormatsSmall
  medium: StrapiAgeGroupMain_imageFormatsMedium
  thumbnail: StrapiAgeGroupMain_imageFormatsThumbnail
}

type StrapiAgeGroupMain_imageFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupMain_imageFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupMain_imageFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupMain_imageFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiAgeGroupLogoFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiAgeGroupLogoFormats {
  large: StrapiAgeGroupLogoFormatsLarge
  small: StrapiAgeGroupLogoFormatsSmall
  medium: StrapiAgeGroupLogoFormatsMedium
  thumbnail: StrapiAgeGroupLogoFormatsThumbnail
}

type StrapiAgeGroupLogoFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupLogoFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupLogoFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupActivity_groups {
  id: Int
  title: String
  ingress: String
  content: String
  wp_guid: String
  mandatory: Boolean
  subactivity_term: Int
  subactivitygroup_term: Int
  activitygroup_term: Int
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  age_group: Int
  activity_group_category: Int
  sort_order: Int
  mandatory_activities_title: String
  mandatory_activities_description: String
  optional_activities_title: String
  optional_activities_description: String
  links: [StrapiAgeGroupActivity_groupsLinks]
  content_area: [StrapiAgeGroupActivity_groupsContent_area]
  main_image: StrapiAgeGroupActivity_groupsMain_image
  logo: StrapiAgeGroupActivity_groupsLogo
}

type StrapiAgeGroupActivity_groupsLinks {
  id: Int
  description: String
  url: String
}

type StrapiAgeGroupActivity_groupsContent_area {
  id: Int
  title: String
  text: String
  block_width: StrapiAgeGroupActivity_groupsContent_areaBlock_width
  number_of_columns: Int
  strapi_component: String
}

type StrapiAgeGroupActivity_groupsContent_areaBlock_width {
  id: Int
  name: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiAgeGroupActivity_groupsMain_image {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: StrapiAgeGroupActivity_groupsMain_imageFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiAgeGroupActivity_groupsMain_imageFormats {
  thumbnail: StrapiAgeGroupActivity_groupsMain_imageFormatsThumbnail
  large: StrapiAgeGroupActivity_groupsMain_imageFormatsLarge
  small: StrapiAgeGroupActivity_groupsMain_imageFormatsSmall
  medium: StrapiAgeGroupActivity_groupsMain_imageFormatsMedium
}

type StrapiAgeGroupActivity_groupsMain_imageFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupActivity_groupsMain_imageFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupActivity_groupsMain_imageFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupActivity_groupsMain_imageFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupActivity_groupsLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiAgeGroupActivity_groupsLogoFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiAgeGroupActivity_groupsLogoFormats {
  small: StrapiAgeGroupActivity_groupsLogoFormatsSmall
  thumbnail: StrapiAgeGroupActivity_groupsLogoFormatsThumbnail
  medium: StrapiAgeGroupActivity_groupsLogoFormatsMedium
  large: StrapiAgeGroupActivity_groupsLogoFormatsLarge
}

type StrapiAgeGroupActivity_groupsLogoFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupActivity_groupsLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupActivity_groupsLogoFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupActivity_groupsLogoFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiAgeGroupLocalizations {
  id: Int
  locale: String
  published_at: Date @dateformat
}

type StrapiAgeGroupFields {
  path: String
}

type StrapiActivityGroup implements Node @dontInfer {
  content_area: JSON
  title: String
  ingress: String
  content: String
  wp_guid: String
  mandatory: Boolean
  subactivity_term: StrapiActivityGroupSubactivity_term
  subactivitygroup_term: StrapiActivityGroupSubactivitygroup_term
  activitygroup_term: StrapiActivityGroupActivitygroup_term
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  age_group: StrapiActivityGroupAge_group
  activity_group_category: StrapiActivityGroupActivity_group_category
  sort_order: Int
  mandatory_activities_title: String
  mandatory_activities_description: String
  optional_activities_title: String
  optional_activities_description: String
  links: [StrapiActivityGroupLinks]
  main_image: StrapiActivityGroupMain_image
  logo: StrapiActivityGroupLogo
  files: [StrapiActivityGroupFiles]
  activities: [StrapiActivityGroupActivities]
  localizations: [StrapiActivityGroupLocalizations]
  strapiId: Int
  fields: StrapiActivityGroupFields
}

type StrapiActivityGroupSubactivity_term {
  id: Int
  name: String
  singular: String
  plural: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityGroupSubactivitygroup_term {
  id: Int
  name: String
  singular: String
  plural: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityGroupActivitygroup_term {
  id: Int
  name: String
  singular: String
  plural: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityGroupAge_group {
  id: Int
  title: String
  ingress: String
  content: String
  minimum_age: Int
  maximum_age: Int
  wp_guid: String
  subactivitygroup_term: Int
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  color: String
  links: [StrapiActivityGroupAge_groupLinks]
  upper_content_area: [StrapiActivityGroupAge_groupUpper_content_area]
  lower_content_area: [StrapiActivityGroupAge_groupLower_content_area]
  main_image: StrapiActivityGroupAge_groupMain_image
  logo: StrapiActivityGroupAge_groupLogo
}

type StrapiActivityGroupAge_groupLinks {
  id: Int
  description: String
  url: String
}

type StrapiActivityGroupAge_groupUpper_content_area {
  id: Int
  title: String
  text: String
  block_width: StrapiActivityGroupAge_groupUpper_content_areaBlock_width
  number_of_columns: Int
  strapi_component: String
}

type StrapiActivityGroupAge_groupUpper_content_areaBlock_width {
  id: Int
  name: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityGroupAge_groupLower_content_area {
  id: Int
  title: String
  text: String
  block_width: StrapiActivityGroupAge_groupLower_content_areaBlock_width
  number_of_columns: Int
  strapi_component: String
}

type StrapiActivityGroupAge_groupLower_content_areaBlock_width {
  id: Int
  name: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityGroupAge_groupMain_image {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: StrapiActivityGroupAge_groupMain_imageFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityGroupAge_groupMain_imageFormats {
  large: StrapiActivityGroupAge_groupMain_imageFormatsLarge
  small: StrapiActivityGroupAge_groupMain_imageFormatsSmall
  medium: StrapiActivityGroupAge_groupMain_imageFormatsMedium
  thumbnail: StrapiActivityGroupAge_groupMain_imageFormatsThumbnail
}

type StrapiActivityGroupAge_groupMain_imageFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupAge_groupMain_imageFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupAge_groupMain_imageFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupAge_groupMain_imageFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupAge_groupLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiActivityGroupAge_groupLogoFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityGroupAge_groupLogoFormats {
  large: StrapiActivityGroupAge_groupLogoFormatsLarge
  small: StrapiActivityGroupAge_groupLogoFormatsSmall
  medium: StrapiActivityGroupAge_groupLogoFormatsMedium
  thumbnail: StrapiActivityGroupAge_groupLogoFormatsThumbnail
}

type StrapiActivityGroupAge_groupLogoFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupAge_groupLogoFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupAge_groupLogoFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupAge_groupLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupActivity_group_category {
  id: Int
  name: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  wp_guid: String
  sort_order: Int
}

type StrapiActivityGroupLinks {
  id: Int
  description: String
  url: String
}

type StrapiActivityGroupMain_image {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: StrapiActivityGroupMain_imageFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityGroupMain_imageFormats {
  thumbnail: StrapiActivityGroupMain_imageFormatsThumbnail
  large: StrapiActivityGroupMain_imageFormatsLarge
  small: StrapiActivityGroupMain_imageFormatsSmall
  medium: StrapiActivityGroupMain_imageFormatsMedium
}

type StrapiActivityGroupMain_imageFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupMain_imageFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupMain_imageFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupMain_imageFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupLogo {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: StrapiActivityGroupLogoFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityGroupLogoFormats {
  thumbnail: StrapiActivityGroupLogoFormatsThumbnail
  small: StrapiActivityGroupLogoFormatsSmall
  medium: StrapiActivityGroupLogoFormatsMedium
  large: StrapiActivityGroupLogoFormatsLarge
}

type StrapiActivityGroupLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupLogoFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupLogoFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupLogoFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupFiles {
  id: Int
  name: String
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityGroupActivities {
  id: Int
  title: String
  content: String
  mandatory: Boolean
  ingress: String
  wp_guid: String
  leader_tasks: String
  activity_term: Int
  duration: Int
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  activity_group: Int
  age_group: Int
  preparation_duration: Int
  links: [StrapiActivityGroupActivitiesLinks]
  logo: StrapiActivityGroupActivitiesLogo
  files: [StrapiActivityGroupActivitiesFiles]
  images: [StrapiActivityGroupActivitiesImages]
}

type StrapiActivityGroupActivitiesLinks {
  id: Int
  description: String
  url: String
}

type StrapiActivityGroupActivitiesLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiActivityGroupActivitiesLogoFormats
  hash: String
  ext: String
  mime: String
  size: Int
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityGroupActivitiesLogoFormats {
  thumbnail: StrapiActivityGroupActivitiesLogoFormatsThumbnail
}

type StrapiActivityGroupActivitiesLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupActivitiesFiles {
  id: Int
  name: String
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityGroupActivitiesImages {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiActivityGroupActivitiesImagesFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityGroupActivitiesImagesFormats {
  large: StrapiActivityGroupActivitiesImagesFormatsLarge
  small: StrapiActivityGroupActivitiesImagesFormatsSmall
  medium: StrapiActivityGroupActivitiesImagesFormatsMedium
  thumbnail: StrapiActivityGroupActivitiesImagesFormatsThumbnail
}

type StrapiActivityGroupActivitiesImagesFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupActivitiesImagesFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupActivitiesImagesFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupActivitiesImagesFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroupLocalizations {
  id: Int
  locale: String
  published_at: Date @dateformat
}

type StrapiActivityGroupFields {
  path: String
}

type StrapiContentPage implements Node @dontInfer {
  content: JSON
  title: String
  ingress: String
  main_text: String
  meta_description: String
  meta_title: String
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  main_image: StrapiContentPageMain_image
  localizations: [StrapiContentPageLocalizations]
  strapiId: Int
}

type StrapiContentPageMain_image {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: StrapiContentPageMain_imageFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiContentPageMain_imageFormats {
  large: StrapiContentPageMain_imageFormatsLarge
  small: StrapiContentPageMain_imageFormatsSmall
  medium: StrapiContentPageMain_imageFormatsMedium
  thumbnail: StrapiContentPageMain_imageFormatsThumbnail
}

type StrapiContentPageMain_imageFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiContentPageMain_imageFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiContentPageMain_imageFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiContentPageMain_imageFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiContentPageLocalizations {
  id: Int
  locale: String
  published_at: Date @dateformat
}

type StrapiFrontPage implements Node @dontInfer {
  content: JSON
  title: String
  ingress: String
  meta_description: String
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  navigation: [StrapiFrontPageNavigation]
  footer_sections: [StrapiFrontPageFooter_sections]
  localizations: [StrapiFrontPageLocalizations]
  strapiId: Int
}

type StrapiFrontPageNavigation {
  id: Int
  title: String
  page: Int
  subnavigation: [StrapiFrontPageNavigationSubnavigation]
}

type StrapiFrontPageNavigationSubnavigation {
  id: Int
  title: String
  page: StrapiFrontPageNavigationSubnavigationPage
  subnavigation: [StrapiFrontPageNavigationSubnavigationSubnavigation]
}

type StrapiFrontPageNavigationSubnavigationPage {
  id: Int
  title: String
  ingress: String
  main_text: String
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  main_image: StrapiFrontPageNavigationSubnavigationPageMain_image
}

type StrapiFrontPageNavigationSubnavigationPageMain_image {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: StrapiFrontPageNavigationSubnavigationPageMain_imageFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiFrontPageNavigationSubnavigationPageMain_imageFormats {
  large: StrapiFrontPageNavigationSubnavigationPageMain_imageFormatsLarge
  small: StrapiFrontPageNavigationSubnavigationPageMain_imageFormatsSmall
  medium: StrapiFrontPageNavigationSubnavigationPageMain_imageFormatsMedium
  thumbnail: StrapiFrontPageNavigationSubnavigationPageMain_imageFormatsThumbnail
}

type StrapiFrontPageNavigationSubnavigationPageMain_imageFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiFrontPageNavigationSubnavigationPageMain_imageFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiFrontPageNavigationSubnavigationPageMain_imageFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiFrontPageNavigationSubnavigationPageMain_imageFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiFrontPageNavigationSubnavigationSubnavigation {
  id: Int
  title: String
  page: StrapiFrontPageNavigationSubnavigationSubnavigationPage
}

type StrapiFrontPageNavigationSubnavigationSubnavigationPage {
  id: Int
  title: String
  main_text: String
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiFrontPageFooter_sections {
  id: Int
  title: String
  link_groups: [StrapiFrontPageFooter_sectionsLink_groups] @proxy(from: "link-groups", fromNode: false)
}

type StrapiFrontPageFooter_sectionsLink_groups {
  id: Int
  links: [StrapiFrontPageFooter_sectionsLink_groupsLinks]
  some_links: StrapiFrontPageFooter_sectionsLink_groupsSome_links
}

type StrapiFrontPageFooter_sectionsLink_groupsLinks {
  id: Int
  description: String
  url: String
  phone_number: String
  email: String
  title: String
}

type StrapiFrontPageFooter_sectionsLink_groupsSome_links {
  id: Int
  facebook_url: String
  twitter_url: String
  instagram_url: String
  youtube_url: String
}

type StrapiFrontPageLocalizations {
  id: Int
  locale: String
  published_at: Date @dateformat
}

enum ImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
  INSIDE
  OUTSIDE
}

enum ImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

enum ImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

input BlurredOptions {
  """Width of the generated low-res preview. Default is 20px"""
  width: Int

  """
  Force the output format for the low-res preview. Default is to use the same
  format as the input. You should rarely need to change this
  """
  toFormat: ImageFormat
}

input JPGOptions {
  quality: Int
  progressive: Boolean
}

input PNGOptions {
  quality: Int
  compressionSpeed: Int
}

input WebPOptions {
  quality: Int
}

input AVIFOptions {
  quality: Int
  lossless: Boolean
  speed: Int
}

input TransformOptions {
  grayscale: Boolean
  duotone: DuotoneGradient
  rotate: Int
  trim: Float
  cropFocus: ImageCropFocus
  fit: ImageFit
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

type ImageSharp implements Node @childOf(mimeTypes: [], types: ["File"]) @dontInfer {
  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpFixed
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    """
    A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    """
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  gatsbyImageData(
    """
    The layout for the image.
    FIXED: A static image sized, that does not resize according to the screen width
    FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if
    it isn't going to be the full width of the screen.
    CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    """
    layout: ImageLayout = CONSTRAINED

    """
    The display width of the generated image for layout = FIXED, and the maximum
    display width of the largest image for layout = CONSTRAINED.
    Ignored if layout = FLUID.
    """
    width: Int

    """
    The display height of the generated image for layout = FIXED, and the
    maximum display height of the largest image for layout = CONSTRAINED.
    The image will be cropped if the aspect ratio does not match the source
    image. If omitted, it is calculated from the supplied width,
    matching the aspect ratio of the source image.
    """
    height: Int

    """
    If set along with width or height, this will set the value of the other
    dimension to match the provided aspect ratio, cropping the image if needed.
    If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    """
    aspectRatio: Float

    """
    Format of generated placeholder image, displayed while the main image loads.
    BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
    TRACED_SVG: a low-resolution traced SVG of the image.
    NONE: no placeholder. Set "background" to use a fixed background color.
    """
    placeholder: ImagePlaceholder

    """
    Options for the low-resolution placeholder image. Set placeholder to "BLURRED" to use this
    """
    blurredOptions: BlurredOptions

    """
    Options for traced placeholder SVGs. You also should set placeholder to "TRACED_SVG".
    """
    tracedSVGOptions: Potrace

    """
    The image formats to generate. Valid values are "AUTO" (meaning the same
    format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
    The default value is [AUTO, WEBP], and you should rarely need to change
    this. Take care if you specify JPG or PNG when you do
    not know the formats of the source images, as this could lead to unwanted
    results such as converting JPEGs to PNGs. Specifying
    both PNG and JPG is not supported and will be ignored.
    """
    formats: [ImageFormat]

    """
    A list of image pixel densities to generate. It will never generate images
    larger than the source, and will always include a 1x image.
    Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1,
    2] for CONSTRAINED. In this case, an image with a constrained layout
    and width = 400 would generate images at 100, 200, 400 and 800px wide.
    Ignored for FULL_WIDTH images, which use breakpoints instead
    """
    outputPixelDensities: [Float]

    """
    Specifies the image widths to generate. For FIXED and CONSTRAINED images it
    is better to allow these to be determined automatically,
    based on the image size. For FULL_WIDTH images this can be used to override
    the default, which is [750, 1080, 1366, 1920].
    It will never generate any images larger than the source.
    """
    breakpoints: [Int]

    """
    The "sizes" property, passed to the img tag. This describes the display size of the image.
    This does not affect the generated images, but is used by the browser to decide which images to download.
    You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    does not actually span the full width of the screen, in which case you should pass the correct size here.
    """
    sizes: String

    """The default quality. This is overridden by any format-specific options"""
    quality: Int

    """Options to pass to sharp when generating JPG images."""
    jpgOptions: JPGOptions

    """Options to pass to sharp when generating PNG images."""
    pngOptions: PNGOptions

    """Options to pass to sharp when generating WebP images."""
    webpOptions: WebPOptions

    """Options to pass to sharp when generating AVIF images."""
    avifOptions: AVIFOptions

    """
    Options to pass to sharp to control cropping and other image manipulations.
    """
    transformOptions: TransformOptions

    """
    Background color applied to the wrapper. Also passed to sharp to use as a
    background when "letterboxing" an image to another aspect ratio.
    """
    backgroundColor: String
  ): JSON!
  original: ImageSharpOriginal
  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResize
}

type StrapiSuggestion implements Node @dontInfer {
  title: String
  content: String
  activity: StrapiSuggestionActivity
  wp_guid: String
  author: String
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  from_web: Boolean
  like_count: Int
  pinned: Boolean
  duration: StrapiSuggestionDuration
  links: [StrapiSuggestionLinks]
  files: [StrapiSuggestionFiles]
  comments: [StrapiSuggestionComments]
  locations: [StrapiSuggestionLocations]
  strapiId: Int
}

type StrapiSuggestionActivity {
  id: Int
  title: String
  content: String
  mandatory: Boolean
  ingress: String
  wp_guid: String
  leader_tasks: String
  activity_term: Int
  duration: Int
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  activity_group: Int
  age_group: Int
  preparation_duration: Int
  links: [StrapiSuggestionActivityLinks]
  logo: StrapiSuggestionActivityLogo
  images: [StrapiSuggestionActivityImages]
}

type StrapiSuggestionActivityLinks {
  id: Int
  description: String
  url: String
}

type StrapiSuggestionActivityLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiSuggestionActivityLogoFormats
  hash: String
  ext: String
  mime: String
  size: Int
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiSuggestionActivityLogoFormats {
  thumbnail: StrapiSuggestionActivityLogoFormatsThumbnail
}

type StrapiSuggestionActivityLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiSuggestionActivityImages {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiSuggestionActivityImagesFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiSuggestionActivityImagesFormats {
  large: StrapiSuggestionActivityImagesFormatsLarge
  small: StrapiSuggestionActivityImagesFormatsSmall
  medium: StrapiSuggestionActivityImagesFormatsMedium
  thumbnail: StrapiSuggestionActivityImagesFormatsThumbnail
}

type StrapiSuggestionActivityImagesFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiSuggestionActivityImagesFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiSuggestionActivityImagesFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiSuggestionActivityImagesFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiSuggestionDuration {
  id: Int
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiSuggestionLinks {
  id: Int
  description: String
  url: String
}

type StrapiSuggestionFiles {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiSuggestionFilesFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiSuggestionFilesFormats {
  large: StrapiSuggestionFilesFormatsLarge
  small: StrapiSuggestionFilesFormatsSmall
  medium: StrapiSuggestionFilesFormatsMedium
  thumbnail: StrapiSuggestionFilesFormatsThumbnail
}

type StrapiSuggestionFilesFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiSuggestionFilesFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiSuggestionFilesFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiSuggestionFilesFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiSuggestionComments {
  id: Int
  text: String
  author: String
  suggestion: Int
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiSuggestionLocations {
  id: Int
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  icon: StrapiSuggestionLocationsIcon
}

type StrapiSuggestionLocationsIcon {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiLocation implements Node @dontInfer {
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  icon: StrapiLocationIcon
  activities: [StrapiLocationActivities]
  localizations: [StrapiLocationLocalizations]
  strapiId: Int
}

type StrapiLocationIcon {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiLocationActivities {
  id: Int
  title: String
  content: String
  mandatory: Boolean
  ingress: String
  wp_guid: String
  leader_tasks: String
  activity_term: Int
  duration: Int
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  activity_group: Int
  age_group: Int
  preparation_duration: Int
  links: [StrapiLocationActivitiesLinks]
  logo: StrapiLocationActivitiesLogo
  files: [StrapiLocationActivitiesFiles]
  images: [StrapiLocationActivitiesImages]
}

type StrapiLocationActivitiesLinks {
  id: Int
  description: String
  url: String
}

type StrapiLocationActivitiesLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiLocationActivitiesLogoFormats
  hash: String
  ext: String
  mime: String
  size: Int
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiLocationActivitiesLogoFormats {
  thumbnail: StrapiLocationActivitiesLogoFormatsThumbnail
}

type StrapiLocationActivitiesLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiLocationActivitiesFiles {
  id: Int
  name: String
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiLocationActivitiesImages {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiLocationActivitiesImagesFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiLocationActivitiesImagesFormats {
  large: StrapiLocationActivitiesImagesFormatsLarge
  small: StrapiLocationActivitiesImagesFormatsSmall
  medium: StrapiLocationActivitiesImagesFormatsMedium
  thumbnail: StrapiLocationActivitiesImagesFormatsThumbnail
}

type StrapiLocationActivitiesImagesFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiLocationActivitiesImagesFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiLocationActivitiesImagesFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiLocationActivitiesImagesFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiLocationLocalizations {
  id: Int
  locale: String
}

type StrapiDuration implements Node @dontInfer {
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  activities: [StrapiDurationActivities]
  preparation_activities: [StrapiDurationPreparation_activities]
  localizations: [StrapiDurationLocalizations]
  strapiId: Int
}

type StrapiDurationActivities {
  id: Int
  title: String
  content: String
  mandatory: Boolean
  ingress: String
  wp_guid: String
  leader_tasks: String
  activity_term: Int
  duration: Int
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  activity_group: Int
  age_group: Int
  preparation_duration: Int
  links: [StrapiDurationActivitiesLinks]
  logo: StrapiDurationActivitiesLogo
  files: [StrapiDurationActivitiesFiles]
  images: [StrapiDurationActivitiesImages]
}

type StrapiDurationActivitiesLinks {
  id: Int
  description: String
  url: String
}

type StrapiDurationActivitiesLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiDurationActivitiesLogoFormats
  hash: String
  ext: String
  mime: String
  size: Int
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiDurationActivitiesLogoFormats {
  thumbnail: StrapiDurationActivitiesLogoFormatsThumbnail
}

type StrapiDurationActivitiesLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiDurationActivitiesFiles {
  id: Int
  name: String
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiDurationActivitiesImages {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiDurationActivitiesImagesFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiDurationActivitiesImagesFormats {
  large: StrapiDurationActivitiesImagesFormatsLarge
  small: StrapiDurationActivitiesImagesFormatsSmall
  medium: StrapiDurationActivitiesImagesFormatsMedium
  thumbnail: StrapiDurationActivitiesImagesFormatsThumbnail
}

type StrapiDurationActivitiesImagesFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiDurationActivitiesImagesFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiDurationActivitiesImagesFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiDurationActivitiesImagesFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiDurationPreparation_activities {
  id: Int
  title: String
  content: String
  mandatory: Boolean
  ingress: String
  wp_guid: String
  leader_tasks: String
  activity_term: Int
  duration: Int
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  activity_group: Int
  age_group: Int
  preparation_duration: Int
  links: [StrapiDurationPreparation_activitiesLinks]
  logo: StrapiDurationPreparation_activitiesLogo
  files: [StrapiDurationPreparation_activitiesFiles]
  images: [StrapiDurationPreparation_activitiesImages]
}

type StrapiDurationPreparation_activitiesLinks {
  id: Int
  description: String
  url: String
}

type StrapiDurationPreparation_activitiesLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiDurationPreparation_activitiesLogoFormats
  hash: String
  ext: String
  mime: String
  size: Int
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiDurationPreparation_activitiesLogoFormats {
  thumbnail: StrapiDurationPreparation_activitiesLogoFormatsThumbnail
}

type StrapiDurationPreparation_activitiesLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiDurationPreparation_activitiesFiles {
  id: Int
  name: String
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiDurationPreparation_activitiesImages {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiDurationPreparation_activitiesImagesFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiDurationPreparation_activitiesImagesFormats {
  large: StrapiDurationPreparation_activitiesImagesFormatsLarge
  small: StrapiDurationPreparation_activitiesImagesFormatsSmall
  medium: StrapiDurationPreparation_activitiesImagesFormatsMedium
  thumbnail: StrapiDurationPreparation_activitiesImagesFormatsThumbnail
}

type StrapiDurationPreparation_activitiesImagesFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiDurationPreparation_activitiesImagesFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiDurationPreparation_activitiesImagesFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiDurationPreparation_activitiesImagesFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiDurationLocalizations {
  id: Int
  locale: String
}

type StrapiActivity implements Node @dontInfer {
  title: String
  content: String
  mandatory: Boolean
  ingress: String
  wp_guid: String
  leader_tasks: String
  activity_term: StrapiActivityActivity_term
  duration: StrapiActivityDuration
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  activity_group: StrapiActivityActivity_group
  age_group: StrapiActivityAge_group
  preparation_duration: StrapiActivityPreparation_duration
  links: [StrapiActivityLinks]
  logo: StrapiActivityLogo
  files: [StrapiActivityFiles]
  images: [StrapiActivityImages]
  group_sizes: [StrapiActivityGroup_sizes]
  skill_areas: [StrapiActivitySkill_areas]
  educational_objectives: [StrapiActivityEducational_objectives]
  leader_skills: [StrapiActivityLeader_skills]
  suggestions: [StrapiActivitySuggestions]
  locations: [StrapiActivityLocations]
  localizations: [StrapiActivityLocalizations]
  strapiId: Int
  fields: StrapiActivityFields
}

type StrapiActivityActivity_term {
  id: Int
  name: String
  singular: String
  plural: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityDuration {
  id: Int
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityActivity_group {
  id: Int
  title: String
  ingress: String
  content: String
  wp_guid: String
  mandatory: Boolean
  subactivity_term: Int
  subactivitygroup_term: Int
  activitygroup_term: Int
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  age_group: Int
  activity_group_category: Int
  sort_order: Int
  mandatory_activities_title: String
  mandatory_activities_description: String
  optional_activities_title: String
  optional_activities_description: String
  links: [StrapiActivityActivity_groupLinks]
  content_area: [StrapiActivityActivity_groupContent_area]
  main_image: StrapiActivityActivity_groupMain_image
  logo: StrapiActivityActivity_groupLogo
  files: [StrapiActivityActivity_groupFiles]
}

type StrapiActivityActivity_groupLinks {
  id: Int
  description: String
  url: String
}

type StrapiActivityActivity_groupContent_area {
  id: Int
  title: String
  text: String
  block_width: StrapiActivityActivity_groupContent_areaBlock_width
  number_of_columns: Int
  strapi_component: String
}

type StrapiActivityActivity_groupContent_areaBlock_width {
  id: Int
  name: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityActivity_groupMain_image {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: StrapiActivityActivity_groupMain_imageFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityActivity_groupMain_imageFormats {
  thumbnail: StrapiActivityActivity_groupMain_imageFormatsThumbnail
  large: StrapiActivityActivity_groupMain_imageFormatsLarge
  small: StrapiActivityActivity_groupMain_imageFormatsSmall
  medium: StrapiActivityActivity_groupMain_imageFormatsMedium
}

type StrapiActivityActivity_groupMain_imageFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityActivity_groupMain_imageFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityActivity_groupMain_imageFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityActivity_groupMain_imageFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityActivity_groupLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiActivityActivity_groupLogoFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityActivity_groupLogoFormats {
  thumbnail: StrapiActivityActivity_groupLogoFormatsThumbnail
  small: StrapiActivityActivity_groupLogoFormatsSmall
  medium: StrapiActivityActivity_groupLogoFormatsMedium
  large: StrapiActivityActivity_groupLogoFormatsLarge
}

type StrapiActivityActivity_groupLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityActivity_groupLogoFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityActivity_groupLogoFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityActivity_groupLogoFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityActivity_groupFiles {
  id: Int
  name: String
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityAge_group {
  id: Int
  title: String
  ingress: String
  content: String
  minimum_age: Int
  maximum_age: Int
  wp_guid: String
  subactivitygroup_term: Int
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  color: String
  links: [StrapiActivityAge_groupLinks]
  upper_content_area: [StrapiActivityAge_groupUpper_content_area]
  lower_content_area: [StrapiActivityAge_groupLower_content_area]
  main_image: StrapiActivityAge_groupMain_image
  logo: StrapiActivityAge_groupLogo
}

type StrapiActivityAge_groupLinks {
  id: Int
  description: String
  url: String
}

type StrapiActivityAge_groupUpper_content_area {
  id: Int
  title: String
  text: String
  block_width: StrapiActivityAge_groupUpper_content_areaBlock_width
  number_of_columns: Int
  strapi_component: String
}

type StrapiActivityAge_groupUpper_content_areaBlock_width {
  id: Int
  name: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityAge_groupLower_content_area {
  id: Int
  title: String
  text: String
  block_width: StrapiActivityAge_groupLower_content_areaBlock_width
  number_of_columns: Int
  strapi_component: String
}

type StrapiActivityAge_groupLower_content_areaBlock_width {
  id: Int
  name: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityAge_groupMain_image {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: StrapiActivityAge_groupMain_imageFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityAge_groupMain_imageFormats {
  large: StrapiActivityAge_groupMain_imageFormatsLarge
  small: StrapiActivityAge_groupMain_imageFormatsSmall
  medium: StrapiActivityAge_groupMain_imageFormatsMedium
  thumbnail: StrapiActivityAge_groupMain_imageFormatsThumbnail
}

type StrapiActivityAge_groupMain_imageFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityAge_groupMain_imageFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityAge_groupMain_imageFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityAge_groupMain_imageFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityAge_groupLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiActivityAge_groupLogoFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityAge_groupLogoFormats {
  large: StrapiActivityAge_groupLogoFormatsLarge
  small: StrapiActivityAge_groupLogoFormatsSmall
  medium: StrapiActivityAge_groupLogoFormatsMedium
  thumbnail: StrapiActivityAge_groupLogoFormatsThumbnail
}

type StrapiActivityAge_groupLogoFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityAge_groupLogoFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityAge_groupLogoFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityAge_groupLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityPreparation_duration {
  id: Int
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityLinks {
  id: Int
  description: String
  url: String
}

type StrapiActivityLogo {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiActivityLogoFormats
  hash: String
  ext: String
  mime: String
  size: Int
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityLogoFormats {
  thumbnail: StrapiActivityLogoFormatsThumbnail
}

type StrapiActivityLogoFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityFiles {
  id: Int
  name: String
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityImages {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiActivityImagesFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityImagesFormats {
  large: StrapiActivityImagesFormatsLarge
  small: StrapiActivityImagesFormatsSmall
  medium: StrapiActivityImagesFormatsMedium
  thumbnail: StrapiActivityImagesFormatsThumbnail
}

type StrapiActivityImagesFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityImagesFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityImagesFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityImagesFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityGroup_sizes {
  id: Int
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  icon: StrapiActivityGroup_sizesIcon
}

type StrapiActivityGroup_sizesIcon {
  id: Int
  name: String
  width: Int
  height: Int
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivitySkill_areas {
  id: Int
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityEducational_objectives {
  id: Int
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivityLeader_skills {
  id: Int
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
}

type StrapiActivitySuggestions {
  id: Int
  title: String
  content: String
  activity: Int
  wp_guid: String
  author: String
  locale: String
  published_at: Date @dateformat
  created_at: Date @dateformat
  updated_at: Date @dateformat
  from_web: Boolean
  like_count: Int
  pinned: Boolean
  duration: Int
  links: [StrapiActivitySuggestionsLinks]
  files: [StrapiActivitySuggestionsFiles]
}

type StrapiActivitySuggestionsLinks {
  id: Int
  description: String
  url: String
}

type StrapiActivitySuggestionsFiles {
  id: Int
  name: String
  width: Int
  height: Int
  formats: StrapiActivitySuggestionsFilesFormats
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivitySuggestionsFilesFormats {
  large: StrapiActivitySuggestionsFilesFormatsLarge
  small: StrapiActivitySuggestionsFilesFormatsSmall
  medium: StrapiActivitySuggestionsFilesFormatsMedium
  thumbnail: StrapiActivitySuggestionsFilesFormatsThumbnail
}

type StrapiActivitySuggestionsFilesFormatsLarge {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivitySuggestionsFilesFormatsSmall {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivitySuggestionsFilesFormatsMedium {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivitySuggestionsFilesFormatsThumbnail {
  ext: String
  url: String
  hash: String
  mime: String
  name: String
  size: Float
  width: Int
  height: Int
}

type StrapiActivityLocations {
  id: Int
  name: String
  slug: String
  locale: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  icon: StrapiActivityLocationsIcon
}

type StrapiActivityLocationsIcon {
  id: Int
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  provider: String
  created_at: Date @dateformat
  updated_at: Date @dateformat
  localFile: File @link(by: "id", from: "localFile___NODE")
}

type StrapiActivityLocalizations {
  id: Int
  locale: String
  published_at: Date @dateformat
}

type StrapiActivityFields {
  path: String
}

type Program_Navigation implements Node @dontInfer {
  items: [Program_NavigationItems]
}

type Program_NavigationItems {
  title: String
  type: String
  id: Int
  path: String
  color: String
  subitems: [Program_NavigationItemsSubitems]
  minimum_age: Int
  maximum_age: Int
}

type Program_NavigationItemsSubitems {
  title: String
  type: String
  id: Int
  path: String
  subitems: [Program_NavigationItemsSubitemsSubitems]
}

type Program_NavigationItemsSubitemsSubitems {
  title: String
  type: String
  id: Int
  path: String
}

type Content_Navigation implements Node @dontInfer {
  items: [Content_NavigationItems]
}

type Content_NavigationItems {
  title: String
  subitems: [Content_NavigationItemsSubitems]
}

type Content_NavigationItemsSubitems {
  title: String
  type: String
  id: Int
  path: String
  subitems: [Content_NavigationItemsSubitemsSubitems]
}

type Content_NavigationItemsSubitemsSubitems {
  title: String
  type: String
  id: Int
  path: String
}

type Activity_Logo implements Node @dontInfer {
  logo: String
}